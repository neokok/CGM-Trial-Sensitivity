---
title: "table1"
format: html
---

```{r setup, include=FALSE}
library(dplyr)
library(tidyverse)
library(ggplot2)
library(ggthemes)
library(tableone)
library(kableExtra)
```

## Read in data
```{r}
# read in the data/DiabScreening_a.txt file, which uses pipe delimiters
data <- read.table("data/DCLP3 Public Dataset - Release 3 - 2022-08-04/Data Files/DiabScreening_a.txt", sep = "|", header = TRUE, fill = TRUE, fileEncoding = "UTF-16LE", stringsAsFactors = FALSE, na.strings = "")

# Read the data from the pipe-delimited text file
ses_data <- read.table("data/DCLP3 Public Dataset - Release 3 - 2022-08-04/Data Files/DiabSocioEcon_a.txt", sep = "|", header = TRUE, fill = TRUE, fileEncoding = "UTF-16LE", stringsAsFactors = FALSE, na.strings = "")
ses_data <- ses_data %>%
  # Trim whitespace in character variables
  mutate(across(where(is.character), ~str_trim(.))) %>%
  # Convert categorical variables to factors
  mutate(
    EducationLevel = factor(EducationLevel),
    AnnualIncome = factor(AnnualIncome),
    InsPrivate = as.numeric(InsPrivate)
  ) %>%
  # Handle missing values explicitly if needed
  mutate(across(starts_with("Ins"), ~ if_else(is.na(.), 0, as.numeric(.))))
  

physical_data <- read.table("data/DCLP3 Public Dataset - Release 3 - 2022-08-04/Data Files/DiabPhysExam_a.txt", sep = "|", header = TRUE, fill = TRUE, fileEncoding = "UTF-16LE", stringsAsFactors = FALSE, na.strings = "")

# mutate BMI using weight (lbs) and height (cm) in physical data
physical_data <- physical_data %>%
  mutate(BMI = (Weight / 2.20462) / ((Height / 100) ^ 2))

# left join ses_data to data using PtID
data <- left_join(data, ses_data, by = "PtID")
data <- left_join(data, physical_data, by = "PtID")
```

## Condense categories for table
```{r}
data <- data %>%
  mutate(
    `Age Group` = ifelse(AgeAtEnrollment >= 18, ">=18", "<18"),
    EducationLevel = case_when(
      grepl("^Bach", EducationLevel) ~ "Bachelor's degree",
      grepl("^Mast", EducationLevel) ~ "Advanced degree",
      grepl("^Prof", EducationLevel) ~ "Advanced degree",
      grepl("^Some", EducationLevel) ~ "Less than bachelor's degree",
      grepl("^Assoc", EducationLevel) ~ "Less than bachelor's degree",
      grepl("^High", EducationLevel) ~ "Less than bachelor's degree",
      grepl("^Doct", EducationLevel) ~ "Advanced degree",
      TRUE ~ EducationLevel
    )
  ) %>%
  mutate(
    `Education Level` = ifelse(EducationLevel %in% c("10th grade", "9th grade", 
                                                  "Associate Degree", 
                                                  "Some college but no degree", 
                                                  "High school graduate/diploma/GED"), 
                            "Less than bachelor's degree", EducationLevel)
  ) %>%
  mutate(
    `Administration Type` = case_when(
      InsModPump == 1 ~ "Pump",
      InsModInjections == 1 ~ "Injections",
      TRUE ~ "Other"
    ),
    `Annual Income` = case_when(
      AnnualIncome %in% c("$100,000 to less than $200,000", "$200,000 or more") ~ "â‰¥100,000",
      AnnualIncome == "$35,000 to less than $50,000" ~ "<50,000",
      AnnualIncome == "$50,000 to less than $75,000" ~ "50,000-100,000",
      TRUE ~ AnnualIncome
    )
  ) |> 
  rename(`Previous CGM Use` = CGMUseStat,
         Age = AgeAtEnrollment)

```

### Write table
```{r}
# Define variables for Table 1
vars <- c("Age", "Age Group", "Gender", "Race", "Ethnicity", "BMI", "Annual Income", "Education Level", "Previous CGM Use", "Administration Type")

# Categorical variables
factorVars <- c("Gender", "Race", "Ethnicity", "Annual Income", "Education Level", "Previous CGM Use", "Administration Type")

# Create Table 1, strata = group (control vs )
table1 <- CreateTableOne(vars = vars, data = data, factorVars = factorVars)

# Convert Table 1 to a dataframe
table1_df <- print(table1, strata="AgeGroup", showAllLevels = TRUE, formatOptions = list(big.mark = ","), printToggle = FALSE)

# Create HTML table using kableExtra
table1_html <- table1_df %>%
  kbl(caption = "Table 1: Cohort Characteristics by Age Group") %>%
  kable_classic(full_width = FALSE, html_font = "Arial")

table1_html

# Save HTML table to a file
#save_kable(table1_html, "table1.html")
```

### Plots
```{r}
ggplot(data, aes(x = Age)) +
  geom_histogram(binwidth = 5, fill = "skyblue", color = "black") +
  labs(title = "Age Distribution of Participants", x = "Age", y = "Frequency") +
  theme_stata()
```

```{r}
# Bar Plot of Race Proportions
race_proportions <- data %>%
  count(Race) %>%
  mutate(Proportion = n / sum(n) * 100)

ggplot(race_proportions, aes(x = reorder(Race, -Proportion), y = Proportion)) +
  geom_bar(stat = "identity", fill = "lightgreen", color = "black") +
  labs(title = "Race Proportions", x = "Race", y = "Proportion (%)") +
  theme_stata() +
  coord_flip() +
  theme(axis.text.y = element_text(angle = 0, hjust = 1))

```


```{r}
# report table 1
library(table1)

trt <- read.delim("data/DCLP3 Public Dataset - Release 3 - 2022-08-04/Data Files/PtRoster_a.txt", sep = "|", header = TRUE,
                  stringsAsFactors = FALSE, fileEncoding = "UTF-16LE", na.strings = "")



table_data <- data |> mutate(Race = case_when(
  Race == "More than one race" ~ "Other",
  Race == "Native Hawaiian/Other Pacific Islander" ~ "Other",
  Race == "Unknown/not reported" ~ "Other",
  TRUE ~ Race),
  `Annual Income` = case_when(
    `Annual Income` == "Does not wish to provide" ~ "Missing",
    `Annual Income` == "Unknown" ~ "Missing",
    `Annual Income` == "Missing" ~ "Missing",
    TRUE ~ `Annual Income`)) |> 
  left_join(trt |> select(PtID, trtGroup), by = "PtID") |> 
  filter(!PtID %in% c(84, 33))

demo_table <- table1::table1(~ Age + `Age Group` + BMI +
                 Gender + Race + Ethnicity + 
                 `Previous CGM Use` + 
                 `Administration Type` | trtGroup,
               data = table_data,
               render.continuous = c("Mean (sd)"))
```

