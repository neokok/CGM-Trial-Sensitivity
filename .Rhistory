return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
return(1/log1p(expm1(-1 * rate * x)))
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
return(log1p(-1 * expm1(-1 * rate * x)))
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
return(log(-1 * expm1(-1 * rate * x)))
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(50,1,F,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(1e-20,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
if(exp(-1 * rate * x) == 1){
return(log(-1 * expm1(-1 * rate * x)))
} else{
log(-1 * exp(-1 * rate * x))
}
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
exp(-50)
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
if(exp(-1 * rate * x) == 1){
return(logp1(-1 * expm1(-1 * rate * x)) - 1)
} else{
log(-1 * exp(-1 * rate * x))
}
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
if(exp(-1 * rate * x) == 1){
return(log(-1 * expm1(-1 * rate * x)))
} else{
log1p(1 - exp(-1 * rate * x))
}
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(1e-20,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
exp(-1*rate*x)
exp(-1*50*1)
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
return(rate * x)
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(1e-20,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
if(exp(-1*rate*x) == 1){
return(logp1(-1 * exp(-1 * rate * x) - 1))
} else{
return(log(-1 * expm1(-1 * rate * x)))
}
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
if(exp(-1*rate*x) == 1){
return(logp1(-1 * exp(-1 * rate * x - 1)))
} else{
return(log(-1 * expm1(-1 * rate * x)))
}
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
if(exp(-1*rate*x) == 1){
return(logp1(-1 * exp(-1 * rate * x)))
} else{
return(log(-1 * expm1(-1 * rate * x)))
}
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(1e-20,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
if(exp(-1*rate*x) == 1){
return(log1p(-1 * exp(-1 * rate * x)))
} else{
return(log(-1 * expm1(-1 * rate * x)))
}
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(1e-20,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
if(exp(-1*rate*x) == 1){
return(log(-1 * expm1(-1 * rate * x)))
} else{
return(logp1(-1 * exp(-1 * rate * x)))
}
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(1e-20,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
if(exp(-1*rate*x) == 1){
return(log(-1 * expm1(-1 * rate * x)))
} else{
return(log1p(-1 * exp(-1 * rate * x)))
}
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
sessionInfo()
#make a for loop printing values 1-10
for (i in 1:10) {
print(i)
}
load("~/.RData")
View(girls)
getwd()
#load dataset called AKgirls.csv and display the first 6 rows
bananas <- read.csv(AKgirls.csv)
head(AKgirls)
#display the last 6 rows
tail(AKgirls)
#display the structure of the dataset
str(AKgirls)
#display the summary of the dataset
summary(AKgirls)
#display the number of missing values in the dataset
sum(is.na(AKgirls))
#display the number of unique values in the dataset
length(unique(AKgirls))
#display the number of unique values in the column called "age"
length(unique(AKgirls$age))
data <- read_csv("../cleaned_data.csv")
library(tidyverse)
library(iglu)
data <- read_csv("../cleaned_data.csv")
setwd("~/Documents/UMich/Winter 2025/BIOSTAT620/Final Project/CGM-Trial-Sensitivity")
data <- read_csv("../cleaned_data.csv")
str(data)
data <- data |>
mutate(id = as.factor(id),
site = as.factor(site),
trt = as.factor(trt),
phase = as.factor(phase))
summary(data)
plot_glu(data |> filter(id == "119"))
baseline_data <- data |> filter(phase == "baseline")
baseline_metrics <- cbind(in_range_percent(baseline_date),
cv_glu(baseline_date))
baseline_metrics <- cbind(in_range_percent(baseline_data),
cv_glu(baseline_data))
View(baseline_metrics)
baseline_metrics <- cbind(in_range_percent(baseline_data),
cv_glu(baseline_data)[,2])
?in_range_percent()
baseline_metrics <- cbind(in_range_percent(baseline_data,
baseline_metrics <- cbind(in_range_percent(baseline_data,
target_ranges = c(70,180)),
cv_glu(baseline_data)[,2])
]
baseline_metrics <- cbind(in_range_percent(baseline_data,
target_ranges = c(70,180)),
cv_glu(baseline_data)[,2])
baseline_metrics <- cbind(in_range_percent(baseline_data,
target_ranges = list(c(70,180))),
cv_glu(baseline_data)[,2])
randomization_data <- data |> filter(phase == "randomization")
randomization_data <- data |> filter(phase == "trial")
trial_data <- data |> filter(phase == "trial")
rm(randomization_data)
baseline_metrics <- cbind(in_range_percent(baseline_data,
target_ranges = list(c(70,180))),
cv_glu(baseline_data)[,2],
episode_calculation(baseline_data)[,-1])
episode_calculation(baseline_data)
test <- episode_calculation(baseline_data) |> filter(type == "hypo", level = "lv1") |> select(total_episodes)
test <- episode_calculation(baseline_data) |> filter(type == "hypo", level == "lv1") |> select(total_episodes)
View(test)
baseline_metrics <- cbind(in_range_percent(baseline_data,
target_ranges = list(c(70,180))),
cv_glu(baseline_data)[,2],
episode_calculation(baseline_data) |>
filter(type == "hypo", level == "lv1") |>
select(total_episodes))
View(baseline_metrics)
test <- all_metrics(trial_data |> filter(id == "13"))
View(test)
test <- all_metrics(trial_data |> filter(id %in% c("1", "15", "13")))
window <- 7
data |> filter(time > randomization & time <= randomization + days(window))
head(ymd(data$randomization))
head(data$randomization)
head(ymd(data$randomization))
ymd("2018-05-23 19:31:34 UTC")
date("2018-05-23 19:31:34 UTC")
head(date(data$randomization))
trial_metrics <- function(data, window){
data <- data |> filter(time >= date(randomization) & time <= date(randomization) + days(window))
cbind(in_range_percent(trial_data,target_ranges = list(c(70,180))),
cv_glu(baseline_data)[,2],
episode_calculation(trial_data) |>
filter(type == "hypo", level == "lv1") |>
select(total_episodes))
}
trial_metrics <- function(data, window){
data <- data |> filter(time >= date(randomization) & time <= date(randomization) + days(window))
return(cbind(in_range_percent(trial_data,target_ranges = list(c(70,180))),
cv_glu(baseline_data)[,2],
episode_calculation(trial_data) |>
filter(type == "hypo", level == "lv1") |>
select(total_episodes)))
}
trial_metrics <- function(data, window){
data <- data |> filter(time >= date(randomization) & time <= date(randomization) + days(window))
return(cbind(in_range_percent(trial_data,target_ranges = list(c(70,180))),
cv_glu(baseline_data)[,2],
episode_calculation(trial_data) |>
filter(type == "hypo", level == "lv1") |>
select(total_episodes)))
}
for(i in seq_along(c(7,14,30,60,90,180))){
hold <- trial_metrics(trial_data, i)
assign(paste0("trial_",i), hold)
}
trial_metrics <- function(data, window){
data <- data |> filter(time >= date(randomization) & time <= date(randomization) + days(window))
return(cbind(in_range_percent(trial_data,target_ranges = list(c(70,180))),
cv_glu(trial_data)[,2],
episode_calculation(trial_data) |>
filter(type == "hypo", level == "lv1") |>
select(total_episodes)))
}
trial_metrics <- function(data, window){
data <- data |> filter(time >= date(randomization) & time <= date(randomization) + days(window))
metrics <- cbind(in_range_percent(trial_data,target_ranges = list(c(70,180))),
cv_glu(trial_data)[,2],
episode_calculation(trial_data) |>
filter(type == "hypo", level == "lv1") |>
select(total_episodes))
print(paste0("Window: ", window, " days"))
return(metrics)
}
for(i in seq_along(c(7,14,30,60,90,180))){
hold <- trial_metrics(trial_data, i)
assign(paste0("trial_",i), hold)
}
trial_metrics <- function(data, window){
data <- data |> filter(time >= date(randomization) & time <= date(randomization) + days(window))
metrics <- cbind(in_range_percent(trial_data,target_ranges = list(c(70,180))),
cv_glu(trial_data)[,2],
episode_calculation(trial_data) |>
filter(type == "hypo", level == "lv1") |>
select(total_episodes))
print(paste0("Window: ", window, " days"))
return(metrics)
}
trial_metrics(trial_data, windows[2])
windows <- c(7,14,30,60,90,180)
for(i in seq_along(windows)){
assign(paste0("trial_",windows[i]), trial_metrics(trial_data, windows[i]))
}
trial_metrics <- function(data, window){
data <- data |> filter(time >= date(randomization) & time <= date(randomization) + days(window))
metrics <- cbind(in_range_percent(trial_data,target_ranges = list(c(70,180))),
cv_glu(trial_data)[,2],
episode_calculation(trial_data) |>
filter(type == "hypo", level == "lv1") |>
select(total_episodes),
rep(window, nrow(trial_data)))
print(paste0("Window: ", window, " days"))
return(metrics)
}
windows <- c(7,14,30,60,90,180)
for(i in seq_along(windows)){
assign(paste0("trial_",windows[i]), trial_metrics(trial_data, windows[i]))
}
baseline_metrics <- cbind(in_range_percent(baseline_data,
target_ranges = list(c(70,180))),
cv_glu(baseline_data)[,2],
episode_calculation(baseline_data) |>
filter(type == "hypo", level == "lv1") |>
select(total_episodes),
rep("baseline", length(unique(baseline_data$id))))
View(baseline_metrics)
baseline_metrics <- cbind(in_range_percent(baseline_data,
target_ranges = list(c(70,180))),
cv_glu(baseline_data)[,2],
episode_calculation(baseline_data) |>
filter(type == "hypo", level == "lv1") |>
select(total_episodes),
window = rep("baseline", length(unique(baseline_data$id))))
View(baseline_metrics)
trial_metrics <- function(data, window){
data <- data |> filter(time >= date(randomization) & time <= date(randomization) + days(window))
metrics <- cbind(in_range_percent(trial_data,target_ranges = list(c(70,180))),
cv_glu(trial_data)[,2],
episode_calculation(trial_data) |>
filter(type == "hypo", level == "lv1") |>
select(total_episodes),
rep(windows[i], length(unique(trial_data$id))))
print(paste0("Window: ", window, " days"))
return(metrics)
}
windows <- c(7,14,30,60,90,180)
for(i in seq_along(windows)){
assign(paste0("trial_",windows[i]), trial_metrics(trial_data, windows[i]))
}
###### Combining Data Frames ######
metrics_all <- rbind(baseline_metrics,
trial_7,
trial_14,
trial_30,
trial_60,
trial_90,
trial_180)
View(trial_180)
View(baseline_metrics)
trial_metrics <- function(data, window){
data <- data |> filter(time >= date(randomization) & time <= date(randomization) + days(window))
metrics <- cbind(in_range_percent(trial_data,target_ranges = list(c(70,180))),
cv_glu(trial_data)[,2],
episode_calculation(trial_data) |>
filter(type == "hypo", level == "lv1") |>
select(total_episodes),
window = rep(windows[i], length(unique(trial_data$id))))
print(paste0("Window: ", window, " days"))
return(metrics)
}
windows <- c(7,14,30,60,90,180)
for(i in seq_along(windows)){
assign(paste0("trial_",windows[i]), trial_metrics(trial_data, windows[i]))
}
###### Combining Data Frames ######
metrics_all <- rbind(baseline_metrics,
trial_7,
trial_14,
trial_30,
trial_60,
trial_90,
trial_180)
View(metrics_all)
metrics_all <- metrics_all |>
rename(tot_hyper_ep = total_episodes)
wd()
write_csv(metrics_all, "data/metrics_all.csv")
