return(log1p((-1 * expm1(-1 * rate * x)) - 1))
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
# pexp(1,10)
my_pexp(1, 1, F, T)
# pexp(1,10)
my_pexp(50, 1, F, F)
# pexp(1,10)
my_pexp(50, 1, F, T)
# pexp(1,10)
my_pexp(1e-20, 1, T, F)
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
return(log1p((-1 * expm1(-1 * rate * x)) - 1))
}
else if(lower.tail == FALSE && log.p == TRUE){
return(-1 * expm1(-1 * rate * x))
}
}
# pexp(1,10)
my_pexp(1e-20, 1, T, F)
test <- c(1e-20,1,T,F)
pexp(test)
test <- c(1e-20,1,T,F)
pexp(test[1],test[2],test[3],test[4])
my_pexp(1e-20, 1, T, F)
my_pexp(test[1],test[2],test[3],test[4])
test <- c(1e-20,1,T,F)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
return(log1p((-1 * expm1(-1 * rate * x)) - 1))
}
else if(lower.tail == FALSE && log.p == TRUE){
return(log1p(-1 * expm1(-1 * rate * x)))
}
}
test <- c(1e-20,1,T,F)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(1e-20,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(1e-20,1,F,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(1,1,F,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
return(log1p(-1 * expm1(-1 * rate * x)))
}
else if(lower.tail == FALSE && log.p == TRUE){
return(log1p(-1 * expm1(-1 * rate * x)))
}
}
test <- c(1,1,F,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
return(log1p(-1 * expm1(-1 * rate * x)))
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x) - 1)
}
}
test <- c(1,1,F,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
return(log1p(-1 * expm1(-1 * rate * x)))
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(1,1,F,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(50,1,F,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
return(1/log1p(expm1(-1 * rate * x)))
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
return(log1p(-1 * expm1(-1 * rate * x)))
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
return(log(-1 * expm1(-1 * rate * x)))
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(50,1,F,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(1e-20,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
if(exp(-1 * rate * x) == 1){
return(log(-1 * expm1(-1 * rate * x)))
} else{
log(-1 * exp(-1 * rate * x))
}
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
exp(-50)
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
if(exp(-1 * rate * x) == 1){
return(logp1(-1 * expm1(-1 * rate * x)) - 1)
} else{
log(-1 * exp(-1 * rate * x))
}
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
if(exp(-1 * rate * x) == 1){
return(log(-1 * expm1(-1 * rate * x)))
} else{
log1p(1 - exp(-1 * rate * x))
}
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(1e-20,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
exp(-1*rate*x)
exp(-1*50*1)
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
return(rate * x)
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(1e-20,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
if(exp(-1*rate*x) == 1){
return(logp1(-1 * exp(-1 * rate * x) - 1))
} else{
return(log(-1 * expm1(-1 * rate * x)))
}
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
if(exp(-1*rate*x) == 1){
return(logp1(-1 * exp(-1 * rate * x - 1)))
} else{
return(log(-1 * expm1(-1 * rate * x)))
}
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
if(exp(-1*rate*x) == 1){
return(logp1(-1 * exp(-1 * rate * x)))
} else{
return(log(-1 * expm1(-1 * rate * x)))
}
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(1e-20,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
if(exp(-1*rate*x) == 1){
return(log1p(-1 * exp(-1 * rate * x)))
} else{
return(log(-1 * expm1(-1 * rate * x)))
}
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(1e-20,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
if(exp(-1*rate*x) == 1){
return(log(-1 * expm1(-1 * rate * x)))
} else{
return(logp1(-1 * exp(-1 * rate * x)))
}
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(1e-20,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
my_pexp <- function(x, rate, lower.tail = TRUE, log.p = FALSE){
if(lower.tail == TRUE && log.p == FALSE){
return(-1 * expm1(-1 * rate * x))
}
else if(lower.tail == FALSE && log.p == FALSE){
return(exp(-1 * rate * x))
}
else if(lower.tail == TRUE && log.p == TRUE){
if(exp(-1*rate*x) == 1){
return(log(-1 * expm1(-1 * rate * x)))
} else{
return(log1p(-1 * exp(-1 * rate * x)))
}
}
else if(lower.tail == FALSE && log.p == TRUE){
return((-1 * rate * x))
}
}
test <- c(50,1,T,T)
pexp(test[1],test[2],test[3],test[4])
my_pexp(test[1],test[2],test[3],test[4])
sessionInfo()
#make a for loop printing values 1-10
for (i in 1:10) {
print(i)
}
load("~/.RData")
View(girls)
getwd()
#load dataset called AKgirls.csv and display the first 6 rows
bananas <- read.csv(AKgirls.csv)
head(AKgirls)
#display the last 6 rows
tail(AKgirls)
#display the structure of the dataset
str(AKgirls)
#display the summary of the dataset
summary(AKgirls)
#display the number of missing values in the dataset
sum(is.na(AKgirls))
#display the number of unique values in the dataset
length(unique(AKgirls))
#display the number of unique values in the column called "age"
length(unique(AKgirls$age))
values_over_time = ggplot(longer, aes(x = window, y = value, color = Treatment)) +
geom_boxplot() +
labs(x = "Window Length",
y = "Measure") +
facet_wrap(~ metric, scales = "free_y") +
scale_color_manual(values = c("#3498DB", "#9B59B6")) +
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
setwd("~/Documents/UMich/Winter 2025/BIOSTAT620/Final Project/CGM-Trial-Sensitivity")
# Read in data
data = read_csv("data/metrics_all.csv") %>%
select(id, window, in_range_70_180, CV, below_70, episode_rate, site, trt) %>%
mutate(trt = factor(trt, levels = c("SAP", "CLC")),
trt = recode(trt, "SAP" = "Control"))
library(tidyverse)
# Read in data
data = read_csv("data/metrics_all.csv") %>%
select(id, window, in_range_70_180, CV, below_70, episode_rate, site, trt) %>%
mutate(trt = factor(trt, levels = c("SAP", "CLC")),
trt = recode(trt, "SAP" = "Control"))
treatment_effect = read_csv("data/treatment_effect.csv") %>%
mutate(length = factor(length, levels = c(7, 14, 30, 60, 90, 182)),
metric = case_when(
metric == "in_range_70_180" ~ "Time in Range",
metric == "CV" ~ "Coefficient of Variation",
metric == "below_70" ~ "Time Below 70",
metric == "tot_hyper_ep" ~ "Total Hyper Epi"
)) |>
rename(Metric = metric)
interaction_estimates = read_csv("output/interaction_estimates.csv") %>%
mutate(Window = factor(Window, levels = c(7, 14, 30, 60, 90, 182)),
Metric = case_when(
Metric == "in_range_70_180" ~ "Time in Range",
Metric == "CV" ~ "Coefficient of Variation",
Metric == "below_70" ~ "Time Below 70",
Metric == "episode_rate" ~ "Episode Rate"
))
longer = data |>
rename("Time in Range" = in_range_70_180,
"Coefficient of Variation" = CV,
"Time Below 70" = below_70,
"Episode Rate" = episode_rate,
Treatment = trt) |>
pivot_longer(c("Time in Range", "Coefficient of Variation",
"Time Below 70", "Episode Rate"),
names_to = "metric", values_to = "value")
longer$window = factor(longer$window, levels = c("baseline", 7, 14, 30, 60, 90, 182))
values_over_time = ggplot(longer, aes(x = window, y = value, color = Treatment)) +
geom_boxplot() +
labs(x = "Window Length",
y = "Measure") +
facet_wrap(~ metric, scales = "free_y") +
scale_color_manual(values = c("#3498DB", "#9B59B6")) +
theme_bw()+
theme(plot.title = element_text(hjust = 0.5))
# Figure 2 - Treatment Effect Over Time
effect_over_time = ggplot(treatment_effect, aes(x = length, y = estimate, color = Metric)) +
geom_point() +
geom_errorbar(aes(ymin = estimate - se, ymax = estimate + se), width = 0.2) +
labs(x = "Window Length",
y = "Estimate") +
facet_wrap(~ Metric, scales = "free_y") +
scale_color_manual(values = c("#1ABC9C", "#3498DB", "#E74C3C", "#9B59B6")) +
theme_bw() +
theme(legend.position = "none")
# Figure 3 - Interaction Estimates
interaction_effect = interaction_estimates %>%
ggplot(aes(x = Window, y = Estimate, color = Metric)) +
geom_point() +
geom_errorbar(aes(ymin = LB, ymax = UB), width = 0.2) +
labs(x = "Window Length",
y = "Estimate") +
geom_hline(yintercept = 0, linetype = "dashed", color = "red") +
facet_wrap(~ Metric, scales = "free_y") +
scale_color_manual(values = c("#1ABC9C", "#3498DB", "#E74C3C", "#9B59B6")) +
theme_bw() +
theme(legend.position = "none")
# Save out figures
ggsave("output/Figure_1.jpeg", values_over_time, width = 15, height = 8, dpi = 1200)
ggsave("output/Figure_2.jpeg", effect_over_time, width = 15, height = 8, dpi = 1200)
ggsave("output/Figure_3.jpeg", interaction_effect, width = 15, height = 8, dpi = 1200)
interaction_effect
values_over_time
